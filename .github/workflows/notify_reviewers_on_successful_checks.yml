name: Notify Reviewers on Successful Checks

on:
  check_suite:
    types:
      - completed

jobs:
  notify_reviewers:
    runs-on: ubuntu-latest
    if: ${{ github.event.check_suite.conclusion == 'success' }}
    steps:
      - name: Get PR data
        id: pr_data
        run: |
          PR_ID=$(gh api "search/issues?q=${{ github.event.check_suite.head_sha }}+repo:${{ github.repository }}+is:pr+is:open" -q '.items[0].number')
          if [ -n "$PR_ID" ]; then
            PR_DATA=$(gh pr view $PR_ID --json title,url,author,requestedReviewers)
            echo "::set-output name=pr_data::$PR_DATA"
          else
            echo "Info: PR data could not be retrieved."
            exit 0
          fi

      - name: Notify reviewers
        if: steps.pr_data.outputs.pr_data
        run: |
          PR_DATA="${{ steps.pr_data.outputs.pr_data }}"
          PR_TITLE=$(echo "$PR_DATA" | jq -r '.title')
          PR_URL=$(echo "$PR_DATA" | jq -r '.url')
          AUTHOR_NAME=$(echo "$PR_DATA" | jq -r '.author.login')
          REVIEWER_DATA=$(echo "$PR_DATA" | jq -r '.requestedReviewers.nodes[] | select(.reviews.nodes[]? | .state == "APPROVED" | not) | .login')
          MENTIONS=$(printf "<@%s> " $REVIEWER_DATA)

          if [ -n "$MENTIONS" ]; then
            SLACK_MESSAGE="{
              \"blocks\": [
                {
                  \"type\": \"section\",
                  \"text\": {
                    \"type\": \"mrkdwn\",
                    \"text\": \"$MENTIONS レビューをお願いします。\nPR の CI が通りました。\n\n$PR_TITLE\n$PR_URL\n\nby @$AUTHOR_NAME\"
                  }
                }
              ]
            }"
            curl -s -X POST -H 'Content-type: application/json' --data "$SLACK_MESSAGE" "${{ secrets.SLACK_WEBHOOK_URL }}"
          else
            echo "Info: No reviewers found to mention. Skipping this job."
            exit 0
          fi
