name: Notify Reviewers on Assign

on:
  pull_request:
    types:
      - review_requested

jobs:
  notify_reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Check if CI is successful
        id: check_ci
        run: |
          PR_ID=${{ github.event.pull_request.number }}
          CHECK_STATUS=$(gh api repos/$GITHUB_REPOSITORY/commits/$GITHUB_SHA/check-suites -q '.check_suites[] | select(.app.slug == "github-actions") | .conclusion')
          if [[ $CHECK_STATUS == "success" ]]; then
            echo "::set-output name=ci_successful::true"
          else
            echo "::set-output name=ci_successful::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Notify reviewers
        if: steps.check_ci.outputs.ci_successful == 'true'
        run: |
          PR_ID=${{ github.event.pull_request.number }}
          PR_DATA=$(gh pr view $PR_ID --json title,url,author,assignees,requestedReviewers)
          PR_TITLE=$(echo "$PR_DATA" | jq -r '.title')
          PR_URL=$(echo "$PR_DATA" | jq -r '.url')
          AUTHOR_NAME=$(echo "$PR_DATA" | jq -r '.author.login')
          ASSIGNMENT_DATA=$(echo "$PR_DATA" | jq -r '.assignees.nodes[].login')
          REVIEWER_DATA=$(echo "$PR_DATA" | jq -r '.requestedReviewers.nodes[] | select(.reviews.nodes[]? | .state == "APPROVED" | not) | .login')
          MENTIONS=$(printf "<@%s> " $REVIEWER_DATA)
          
          if [ -n "$MENTIONS" ]; then
            SLACK_MESSAGE="{
              \"blocks\": [
                {
                  \"type\": \"section\",
                  \"text\": {
                    \"type\": \"mrkdwn\",
                    \"text\": \"$MENTIONS レビューをお願いします。\nPR の CI が通りました。\n\n$PR_TITLE\n$PR_URL\n\nby @$AUTHOR_NAME\"
                  }
                }
              ]
            }"

            curl -s -X POST -H 'Content-type: application/json' --data "$SLACK_MESSAGE" "${{ secrets.SLACK_WEBHOOK_URL }}"
          fi
